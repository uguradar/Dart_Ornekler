//1- Hi World
void main()
{
  print("Selam Dünyalı!");
}

//2- Değişkenler ve özellikleri
//Dart değişken tipleri
void main() {
  
  //dartta temel veri tipleri:
  // int, double, float, boolean,list, maps, string , dynamic
  // char ? var mı bilmiyoruz. 
  // değişken tanımlanırsa null ekler.
  int sayi=10;
  double virgullu=12.4;
  bool dogruMu=true;
  String ifade="Yazıyım";
  String tekIfade="a";
  print(sayi);
  print(virgullu);
  print(dogruMu);
  print(ifade);
  print(tekIfade);
  
}

//3- Dynamic veri tipi
// Dynamic veri tipi python based çalışır. Değişken tipi castinge ihtiyaç duymadan aldığı veri tipi esasınca şekillenir.
//Dart değişken tipleri
void main() {
  
  //dynamic, var ile aynı mantıkta sonuç verse de
  // temelde dynamic, değişkeni atadığın anda uygun veri tipine çevirir
  var deneme="a";
  print(deneme);
  var deneme2=12.4;
  print(deneme2);
  
  dynamic bosVeri="ahmet";
  print(bosVeri);
  bosVeri=12.4;
  print(bosVeri);
  
}

//4- Dart const ve final ifadeleri
//Final ve const ifadeleri
void main() {
  // final ve const sabit ifadelerin yazılmasında kullanılır.
  // read only değişkenler olarak düşünülebilir. 
  // farklılık olarak veritipi belirtilmeden de değişken oluşturulabilir.
  final pi=3.14;
  final deger="değişmez";
  print(pi);
  print(deger);
  final String ifade="değişmez ama veritip var.";
  print(ifade);
  const d=1234;
  print(d);
  const bool yap=true;
  print(yap);

}
//5-
//String ekleme ve birleştirme işlemleri
void main() {
 //string birleştirme işlemleri
 // + operatörü
 // interpolasyon
 // string yanyana yazma
 // ve .joins ile yapılır.
  
  //1- + operatörü: standart
  String a="Ben yalnızım";
  String b="Ben birleştiriciyim";
  String c=a+b;
  print(c);
  print(a+b+a+a);
  //2- interpolasyon $ işareti ile yerine koyma % gibi
  print('$a$b$a');
  print('$c $a');
  
  //3-string ifadeleri birlikte yazma
  print("bbb""aaa""ccc");
  
  //4-.join ifadesi ile liste 
  // yapısındaki stringlerin string yapısına dönüştürülmesi mümkündür.
  List<String> yazi=["Uğur","Güven","Adar"];
  String yapi=yazi.join();
  print(yapi);
  String y2=yazi.join(" ");
  print(y2);
    

}

//6-
//Operatörler
void main() {
 //+,-,*,/,%,-
 // Farklı ~/ bölmeyi tam sayı olarak verme.
 int a=15;
 int b=2;
 var c=a+b;
 var d=a-b;
 var e=a*b;
 var f=a/b;
 var g=a~/b;
 var h=a%b;
 print("toplam: $c");
 print("fark: $d");
 print("çarpım: $e");
 print("bölüm: $f");
 print("int bölüm: $g");
 print("mod: $h");

}


//is-!is operatörü
//Operatörler
void main() {
String a="abc";
double b=12.4;
print(a is String);
print(b is !int);

}

//7- büyük küçüktür operatörleri
//Operatörler
void main() {
int a=5;
int b=10;
var c=a>b;
print(c);
var d=a<b;
print(d);
var e=a>=b;
print(e);
var f=a<=b;
print(f);
var g=a==b;
print(g);

}

// or-and
//Operatörler
void main() {
int a=15;
int b=10;
// ve ve veya operatörleri
var c=a>b && a==b;
var d=a>b || a==b;
print(c);
print(d);

}


// ? operatörü
//Operatörler
void main() {
//? operatörü:
// if true false yapısıdır.

var a=10;
var b=20;
var c=(a>b)?"ilk sayı büyük":"ikinci sayı büyük";
print(c);
  
}

//cascade .. operatörü: noktalı virgül 
// ile nesnenin kullanılması.

class Deneme
{
  var a;
  var b;
  
  void set(x,y)
  {
    this.a=x;
    this.b=y;
  }
  
  void add()
  {
    var z=this.a+this.b;
    print(z);
  }
}


//Operatörler
void main() {

  Deneme a1=new Deneme();
  Deneme a2=new Deneme();
  
  
  // cascadesiz
  a1.set(1,2);
  a1.add();
  
  
  // cascade ile; aynı nesnenin adı kullanılmadan çalıştırılması.
  a2..set(3,4)
  ..add();
  
}
